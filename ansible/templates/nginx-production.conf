# Administration application
server {
    server_name {{ admin_domain_name }};

    root {{ cap_ui_admin_abs_dir }}/dist;
    index index.html;

    location /static {
        root {{ cap_base_abs_dir }};
    }

    location /images {
        proxy_pass http://{{ admin_domain_name }}:3000;
    }

    location /qualtrics {
        proxy_pass http://{{ admin_domain_name }}:3000;
    }

    location /graphql {
        proxy_pass http://{{ admin_domain_name }}:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # From https://router.vuejs.org/guide/essentials/history-mode.html
    # Catch-all fallback route to server. If the URL
    # doesn't match any static assets, serve the same
    # index.html page that the app lives in.
    location / {
      try_files $uri $uri/ /index.html;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ ssl_domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ ssl_domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Group application
server {
    server_name {{ group_domain_name }};

    root {{ cap_ui_group_abs_dir }}/dist;
    index index.html;

    location /static {
        root {{ cap_base_abs_dir }};
    }

    location /graphql {
        proxy_pass http://{{ group_domain_name }}:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location / {
      try_files $uri $uri/ /index.html;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ ssl_domain_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ ssl_domain_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = {{ admin_domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name {{ admin_domain_name }};
    listen 80;
    return 404; # managed by Certbot
}

server {
    if ($host = {{ group_domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name {{ group_domain_name }};
    listen 80;
    return 404; # managed by Certbot
}
