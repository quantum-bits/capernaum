---
- name: provision Capernaum
  hosts: all
  vars_files:
    - public.yaml
    - private.yaml
  become: yes
  environment:
    PATH: "{{ ansible_env.PATH }}:~/.yarn/bin"
  tasks:
    - name: add key for yarn PPA
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg
        state: present

    - name: configure yarn PPA
      apt_repository:
        repo: deb https://dl.yarnpkg.com/debian/ stable main
        filename: yarnpkg
        state: present

    - name: add key for node PPA
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: configure node PPA
      apt_repository:
        repo: deb https://deb.nodesource.com/node_12.x bionic main
        filename: nodesource
        state: present

    - name: install apt packages
      apt:
        pkg: "{{ item }}"
        update_cache: yes
      loop:
        - yarn
        - git
        - nodejs
        - nginx
        - postgresql
        - python3-psycopg2
        - texlive-pictures
        - htop
        - tree
        - silversearcher-ag
        - multitail
      tags: apt

    - name: create database user
      become_user: postgres
      postgresql_user:
        name: "{{ pg_username }}"
        password: "{{ pg_password }}"
      tags: db

    - name: create database
      become_user: postgres
      postgresql_db:
        name: "{{ pg_database }}"
        owner: "{{ pg_username }}"
      tags: db

    - name: create capernaum user
      user:
        name: "{{ cap_username }}"
        password: "{{ cap_password | password_hash('sha512') }}"
        shell: /bin/bash
      tags: cap

    - name: clone application from GitHub
      become_user: "{{ cap_username }}"
      git:
        repo: "{{ cap_repo }}"
        dest: "{{ cap_app_dir }}"
      tags: [cap, git]

    - name: create .env file
      become_user: "{{ cap_username }}"
      template:
        src: templates/dot-env
        dest: "{{ cap_server_dir }}/.env"
        mode: 0400
      tags: cap, env

    - name: create image upload directory
      become_user: "{{ cap_username }}"
      file:
        path: "{{ cap_static_dir }}/{{ cap_upload_dir }}"
        state: directory
        mode: 0755
      tags: cap

    - name: create generated PDF directory
      become_user: "{{ cap_username }}"
      file:
        path: "{{ cap_static_dir }}/{{ cap_pdf_dir }}"
        state: directory
        mode: 0755
      tags: cap

    - name: install node modules for user interface
      become_user: "{{ cap_username }}"
      yarn:
        path: "{{ cap_ui_dir }}"
      tags: yarn

    - name: install node modules for server
      become_user: "{{ cap_username }}"
      yarn:
        path: "{{ cap_server_dir }}"
      tags: yarn

    - name: build production ui
      become_user: "{{ cap_username }}"
      command:
        chdir: "{{ cap_ui_dir }}"
        cmd: yarn build
        creates: "{{ cap_ui_dir }}/dist/index.html"
      tags: build

    - name: build production server
      become_user: "{{ cap_username }}"
      command:
        chdir: "{{ cap_server_dir }}"
        cmd: yarn build
        creates: "{{ cap_server_dir }}/dist/main.js"
      tags: build

    - name: install pm2   # run as root, installs in /usr/local/bin
      yarn:
        name: pm2
        global: yes
      tags: pm2

    - name: create pm2 directory
      become_user: "{{ cap_username }}"
      file:
        path: "{{ cap_pm2_dir }}"
        state: directory
        mode: 0755
      tags: pm2

    - name: configure pm2
      become_user: "{{ cap_username }}"
      template:
        src: templates/ecosystem.config.js
        dest: "{{ cap_pm2_dir }}/ecosystem.config.js"
        mode: 0444
      tags: pm2

    - name: start capernaum server
      become_user: "{{ cap_username }}"
      command: pm2 start "{{ cap_pm2_dir }}/ecosystem.config.js"
      tags: pm2

    - name: disable nginx default configuration
      file:
        path: "{{ nginx_enabled_dir }}/default"
        state: absent
      tags: nginx

    - name: copy nginx config file
      template:
        src: templates/capernaum.conf
        dest: "{{ nginx_available_dir }}/{{ nginx_conf_file }}"
        mode: 0444
      tags: nginx

    - name: enable nginx configuration
      file:
        src: "{{ nginx_available_dir }}/{{ nginx_conf_file }}"
        dest: "{{ nginx_enabled_dir }}/{{ nginx_conf_file }}"
        state: link
      tags: nginx

    - name: restart nginx
      service:
        name: nginx
        state: restarted
      tags: nginx
