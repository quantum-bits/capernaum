# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AbstractEntity {
  """Unique ID for this entity"""
  id: Int!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Image {
  """Unique ID for this entity"""
  id: Int!
  originalName: String!
  mimeType: String!
  uuid: String!
  title: String!
  created: DateTime!
  updated: DateTime!
  url: String!
  letterElements: [LetterElement!]!
}

input ImageUpdateInput {
  id: Int!
  title: String!
}

type Letter {
  """Unique ID for this entity"""
  id: Int!
  title: String!
  description: String!
  emailMessage: String!
  created: DateTime!
  updated: DateTime!
  isFrozen: Boolean
  survey: Survey!
  letterElements: [LetterElement!]!
  tableEntries: [PredictionTableEntry!]!
  scriptureEngagementPractices: [ScriptureEngagementPractice!]!
}

input LetterCreateInput {
  title: String!
  description: String!
  emailMessage: String!
  isFrozen: Boolean = false
  surveyId: Int!
}

type LetterElement {
  """Unique ID for this entity"""
  id: Int!
  sequence: Int!
  textDelta: String
  image: Image
  letter: Letter!
  letterElementType: LetterElementType!
  surveyDimension: SurveyDimension
}

input LetterElementCreateInput {
  sequence: Int!
  textDelta: String
  imageId: Int
  letterId: Int!
  letterElementTypeId: Int!
  surveyDimensionId: Int
}

type LetterElementType {
  """Unique ID for this entity"""
  id: Int!
  key: String!
  description: String!
}

input LetterElementUpdateInput {
  id: Int!
  sequence: Int
  textDelta: String
  imageId: Int
  letterElementTypeId: Int
  surveyDimensionId: Int
}

input LetterUpdateInput {
  id: Int!
  title: String
  description: String
  emailMessage: String
  isFrozen: Boolean
  surveyId: Int
}

input LetterWriterInput {
  letterId: Int!
  surveyResponseId: Int!
}

type LetterWriterOutput {
  ok: Boolean!
  pdfFilePath: String!
}

type Mutation {
  createLetter(createInput: LetterCreateInput!): Letter!
  createLetterElement(createInput: LetterElementCreateInput!): LetterElement!
  updateLetter(letterData: LetterUpdateInput!): Letter!
  updateLetterElement(updateInput: LetterElementUpdateInput!): LetterElement!
  deleteLetter(id: Int!): Int!
  deleteLetterElement(id: Int!): Int!
  writeLetter(letterWriterInput: LetterWriterInput!): LetterWriterOutput!

  """Create a new survey."""
  createSurvey(createInput: SurveyCreateInput!): Survey! @deprecated(reason: "Should only create surveys from Qualtrics")

  """Create a survey dimension."""
  createSurveyDimension(createInput: SurveyDimensionCreateInput!): SurveyDimension!

  """Create a survey index. Can add survey items directly by item ID."""
  createSurveyIndex(createInput: SurveyIndexCreateInput!): SurveyIndex!
  updateSurvey(updateInput: SurveyUpdateInput!): Survey!
  updateSurveyDimension(updateInput: SurveyDimensionUpdateInput!): SurveyDimension!

  """
  Update an index. Field values will replaces existing values in the object.
        (e.g., if you give a value for itemIds, it will replace the current list.
  """
  updateSurveyIndex(updateInput: SurveyIndexUpdateInput!): SurveyIndex!

  """
  Delete a dimension. Also deletes indices associated with this dimension.
      Each index is removed using the equivalent of deleteSurveyIndex.
      Returns details of everything that was deleted.
  """
  deleteSurveyDimension(id: Int!): SurveyDimensionDeleteOutput!

  """
  Delete an index. Also removes associations with items; the items are not removed.
  """
  deleteSurveyIndex(id: Int!): SurveyIndexDeleteOutput!

  """
  Import a survey from Qualtrics. Always use this to create a Capernaum survey.
  """
  importQualtricsSurvey(importInput: QualtricsImportInput!): Survey!

  """Fetch responses to a survey"""
  importQualtricsSurveyResponses(qualtricsId: String!): [SurveyResponse!]!
  createPredictionTableEntry(createInput: PredictionTableEntryCreateInput!): PredictionTableEntry!
  replacePredictionTableEntries(replaceInput: PredictionTableEntryReplaceInput!): [PredictionTableEntry!]!

  """Create a scripture engagement practice"""
  createScriptureEngagementPractice(createInput: ScriptureEngagementPracticeCreateInput!): ScriptureEngagementPractice!
  updateScriptureEngagementPractice(updateData: ScriptureEngagementPracticeUpdateInput!): ScriptureEngagementPractice!
  deleteScriptureEngagementPractice(id: Int!): Int!
  updateImage(updateInput: ImageUpdateInput!): Image!
  deleteImage(id: Int!): Int!
}

input PartialPredictionTableEntry {
  surveyIndexId: Int!
  practiceId: Int!
  sequence: Int!
}

"""One entry in a prediction table"""
type PredictionTableEntry {
  """Unique ID for this entity"""
  id: Int!
  letter: Letter!
  surveyIndex: SurveyIndex!
  practice: ScriptureEngagementPractice!
  sequence: Int!
}

input PredictionTableEntryCreateInput {
  surveyIndexId: Int!
  practiceId: Int!
  sequence: Int!
  letterId: Int!
}

input PredictionTableEntryReplaceInput {
  letterId: Int!
  entries: [PartialPredictionTableEntry!]!
}

input PredictionTableEntryUpdateInput {
  id: Int!
  letterId: Int
  surveyIndexId: Int
  practiceId: Int
  sequence: Int
}

input QualtricsImportInput {
  """Qualtrics unique identifier"""
  qualtricsId: String!

  """Title for associated Capernaum survey"""
  title: String!
}

type QualtricsSurveyListItem {
  qualtricsId: String!
  qualtricsName: String!
  qualtricsOwnerId: String!
  qualtricsModDate: String!
  qualtricsCreationDate: String!
  qualtricsIsActive: Boolean!
  importedAs: [Survey!]!
}

type Query {
  letter(id: Int!): Letter!
  letters: [Letter!]!
  letterElementTypes: [LetterElementType!]!
  survey(id: Int!): Survey!
  surveys: [Survey!]!
  surveyDimensions: [SurveyDimension!]!
  surveyIndices: [SurveyIndex!]!

  """Retrieve all survey items"""
  surveyItems: [SurveyItem!]!
  surveyResponse(id: Int!): SurveyResponse!
  surveyResponses: [SurveyResponse!]!
  surveyDimension(id: Int!): SurveyDimension!
  updateSurveyDimension: SurveyDimension!
  qualtricsSurveys(includeInactive: Boolean = false): [QualtricsSurveyListItem!]!
  scriptureEngagementPractice(id: Int!): ScriptureEngagementPractice!
  scriptureEngagementPractices: [ScriptureEngagementPractice!]!
  images: [Image!]!
  image(id: Int!): Image!
}

"""Scripture engagement practice"""
type ScriptureEngagementPractice {
  """Unique ID for this entity"""
  id: Int!
  title: String!
  description: String!
  moreInfoUrl: String!
  sequence: Int!
  predictionTableEntries: [PredictionTableEntry!]!
}

input ScriptureEngagementPracticeCreateInput {
  title: String!
  description: String!
  moreInfoUrl: String!
  sequence: Int!
}

input ScriptureEngagementPracticeUpdateInput {
  id: Int!
  title: String
  description: String
  moreInfoUrl: String
  sequence: Int
}

"""All information about a survey imported from Qualtrics"""
type Survey {
  """Unique ID for this entity"""
  id: Int!
  letters: [Letter!]!

  """
  Retrieve survey items; pass `whichItems` to choose which to return (default `All`)
  """
  surveyItems(whichItems: WhichItems = All): [SurveyItem!]!
  surveyDimensions: [SurveyDimension!]!

  """Title for this survey in Capernaum"""
  title: String!

  """Unique identifier for this survey on Qualtrics"""
  qualtricsId: String!

  """Name of this survey on Qualtrics"""
  qualtricsName: String!

  """Date and time at which this survey was modified on Qualtrics"""
  qualtricsModDate: String!

  """Convenience property to retrieve SE practices"""
  scriptureEngagementPractices: [ScriptureEngagementPractice!]!
}

input SurveyCreateInput {
  title: String!
  qualtricsId: String!
  qualtricsName: String!
  qualtricsModDate: String!
  surveyItems: [SurveyItemCreateInput!]!
}

"""Top-level grouping of questions in Capernaum; contains indices"""
type SurveyDimension {
  """Unique ID for this entity"""
  id: Int!
  survey: Survey
  surveyIndices: [SurveyIndex!]!

  """Title of this dimension (e.g., 'Focus on Prayer')"""
  title: String!

  """Use this dimension in prediction tables?"""
  useForPredictions: Boolean!

  """Sequence number; dimension are displayed in this order."""
  sequence: Int!
}

"""
Data to create a new dimension. Does not embed indices. Add them with createSurveyIndex.
"""
input SurveyDimensionCreateInput {
  surveyId: Int!
  title: String!
  useForPredictions: Boolean!
  sequence: Int!
}

type SurveyDimensionDeleteOutput {
  """ID of deleted dimension"""
  deletedDimensionId: Int!

  """IDs of all deleted indices"""
  deletedIndexIds: [Int!]!

  """IDs of all items no longer associated with any deleted index"""
  deletedItemIds: [Int!]!
}

input SurveyDimensionUpdateInput {
  id: Int!
  title: String
  useForPredictions: Boolean
  sequence: Int
}

"""Collection of survey items, grouped for analysis"""
type SurveyIndex {
  """Unique ID for this entity"""
  id: Int!
  surveyDimension: SurveyDimension!
  surveyItems: [SurveyItem!]!
  predictionTableEntries: [PredictionTableEntry!]!

  """Abbreviation for this index (e.g., 'FOG')"""
  abbreviation: String!

  """Title of this index"""
  title: String!
}

input SurveyIndexCreateInput {
  """ID of the dimension to contain this index"""
  dimensionId: Int!

  """List of IDs of the items to include in this index."""
  itemIds: [Int!]!

  """Abbreviation for this index (e.g., 'FOG')"""
  abbreviation: String!

  """Title of this index within the dimension"""
  title: String!
}

type SurveyIndexDeleteOutput {
  """ID of deleted index"""
  deletedIndexId: Int!

  """IDs of items removed from the deleted index"""
  deletedItemIds: [Int!]!
}

input SurveyIndexUpdateInput {
  id: Int!
  itemIds: [Int!]
  abbreviation: String
  title: String
}

"""One item (question) from a survey"""
type SurveyItem {
  """Unique ID for this entity"""
  id: Int!
  survey: Survey!
  surveyIndex: SurveyIndex
  surveyItemResponses: [SurveyItemResponse!]!

  """Sequence number; items will be displayed in this order"""
  sequence: Int!

  """Qualtrics identifier for this question"""
  qualtricsId: String!

  """Text of this question from Qualtrics"""
  qualtricsText: String!
  surveyItemResponse(responseId: Int!): SurveyItemResponse
}

input SurveyItemCreateInput {
  sequence: Int = -1
  qualtricsId: String!
  qualtricsText: String!
}

"""One user's response to a single survey question"""
type SurveyItemResponse {
  """Unique ID for this entity"""
  id: Int!
  surveyResponse: SurveyResponse!
  surveyItem: SurveyItem!
  label: String!
  value: Int!
}

"""One user's response to a survey"""
type SurveyResponse {
  """Unique ID for this entity"""
  id: Int!
  survey: Survey!
  surveyItemResponses: [SurveyItemResponse!]!
  email: String!
  groupCode: String!
  qualtricsResponseId: String!
  startDate: String!
  endDate: String!
  recordedDate: String!
  status: Int!
  progress: Int!
  duration: Int!
  finished: Int!
  ipAddress: String!
  latitude: String!
  longitude: String!
}

input SurveyUpdateInput {
  id: Int!
  title: String
  qualtricsId: String
  qualtricsName: String
  qualtricsModDate: String
}

"""
Which items to retrieve: all, those with an index, those without an index
"""
enum WhichItems {
  All
  WithIndex
  WithoutIndex
}
